{"version":3,"sources":["webpack:///./index.js"],"names":["can","document","getElementById","ctx","getContext","menu","number","flag_","used","first_vert","draw_dfs","vertices","isVerticeClicked","verticeNum","width","body","clientWidth","height","clientHeight","dfs_start_btn","bfs_start_btn","dijkstra_start_btn","draw","beginPath","clearRect","forEach","v","drawVertex","connected_v","u","console","log","strokeStyle","rast","Math","sqrt","x","y","cos_i","sin_i","s_y","s_x","moveTo","lineTo","closePath","stroke","drawLine","clear_used_status","i","sleep","ms","Promise","resolve","setTimeout","style","visibility","dfs","length","j","push","arc","PI","fillText","getClickedCoords","rect","getBoundingClientRect","event","clientX","left","clientY","top","addEventListener","opacity","start_dfs","alert","this","id","button","abs","radius","drawMenu","e","preventDefault","second_vert","flag_con","u1"],"mappings":"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","file":"main.2a5e9a8a01359c620642.js","sourcesContent":["import './styles.css';\nimport { hi } from \"./GraphLib\"\n\nvar can = document.getElementById(\"c\");\nvar ctx = can.getContext('2d');\nvar menu = document.getElementById(\"menu\");\nvar number = 1;\nconst radius = 15;\n\nvar delay;\nvar flag_ = 0;\nvar longpress = 1300;\nvar used = [];\nused[10000] = 0;\nvar draw_dfs = [];\nvar vertices = [];\nvar isVerticeClicked = 0;\nvar first_vert;\nvar verticeNum = 0;\nvar stateMachine = [];\nfirst_vert = -1;\ncan.width = document.body.clientWidth;\ncan.height = document.body.clientHeight;\n\nvar dfs_start_btn = document.getElementById(\"start_dfs\");\nvar bfs_start_btn = document.getElementById(\"start_bfs\");\nvar dijkstra_start_btn = document.getElementById(\"start_dijkstra\");\n\ndfs_start_btn.addEventListener(\"click\", function () {\n    if (menu.style.opacity == \"1\")\n        start_dfs(vertices[verticeNum - 1]);\n});\n\n\nbfs_start_btn.addEventListener(\"click\", function () {\n    if (menu.style.opacity == \"1\")\n        alert(this.id);\n});\n\n\ndijkstra_start_btn.addEventListener(\"click\", function () {\n    if (menu.style.opacity == \"1\")\n        alert(this.id);\n});\n\nfunction draw() {\n    ctx.beginPath();\n    ctx.clearRect(0, 0, can.width, can.height);\n    vertices.forEach((v) => { drawVertex(v) });\n    vertices.forEach((v) => {\n        v.connected_v.forEach((u) => {\n            console.log(v.number, \"->\", u.number);\n            drawLine(v, u);\n        });\n    });\n}\n\nfunction clear_used_status() {\n    for (let i = 0; i < number; i++)\n        used[i] = 0;\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function start_dfs(v) {\n    menu.style.visibility = \"hidden\";\n    draw_dfs = [];\n    clear_used_status();\n    console.log(\"starting dfs\");\n    dfs(v);\n    // for(let i = 0; i < draw_dfs.length;i++)\n    //     console.log(draw_dfs[i]);\n    for(let i = 0; i < draw_dfs.length;i++){\n        draw();\n        ctx.beginPath();\n        ctx.strokeStyle = 'red';\n        for(let j = 0; j <= i; j++){\n            drawVertex(vertices[draw_dfs[j].number - 1]);\n        }\n        ctx.closePath();\n        ctx.strokeStyle = 'black';\n        await sleep(1000);\n    }\n}\n\n\n\nasync function dfs(v) {\n    draw_dfs.push(v);\n    used[v.number - 1] = 1;\n    for(let i = 0; i < v.connected_v.length;i++){\n        let u = v.connected_v[i];\n        if (used[u.number - 1] != 1){\n            dfs(u);\n        }\n    }\n}\n\n\nfunction drawVertex(v) {\n    ctx.beginPath();\n    ctx.arc(v.x, v.y, radius, 0, 2 * Math.PI);\n    ctx.fillText(v.number, v.x - 3, v.y + 4, 10);\n    ctx.stroke();\n}\n\nfunction drawLine(v, u) {\n    ctx.beginPath();\n    ctx.strokeStyle = 'green';\n    let rast = (Math.sqrt((v.x - u.x) * (v.x - u.x) + (v.y - u.y) * (v.y - u.y)));\n    let cos_i = (v.x - u.x) / rast;\n    let sin_i = Math.sqrt(1 - cos_i * cos_i);\n    let s_y = radius * sin_i;\n    let s_x = radius * cos_i;\n    if (u.y > v.y) {\n        ctx.moveTo(v.x - s_x, v.y + s_y);\n        ctx.lineTo(u.x + s_x, u.y - s_y);\n    } else {\n        ctx.moveTo(v.x - s_x, v.y - s_y);\n        ctx.lineTo(u.x + s_x, u.y + s_y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.strokeStyle = 'black';\n}\n\nfunction getClickedCoords() {\n    let rect = can.getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n    return { x, y };\n}\n\ncan.addEventListener('mousedown', event => {\n    draw();\n    let { x, y } = getClickedCoords();\n\n    if (event.button == 0) {\n        clear_used_status();\n        menu.style.visibility = \"hidden\"; // скрыли прошлое меню;\n        console.log(\"leftClick\");\n        vertices.forEach((v) => {\n            if (Math.abs(v.x - x) <= 2 * v.radius && Math.abs(v.y - y) <= 2 * v.radius) {\n                flag_ = 1;\n                console.log(\"collision with vertice \" + v.number, isVerticeClicked);\n                verticeNum = v.number;\n            }\n        });\n        draw();\n    }\n    else if (event.button == 2) {\n        console.log(\"rightClick\");\n        vertices.forEach((v) => {\n            if (Math.abs(v.x - x) <= 2 * v.radius && Math.abs(v.y - y) <= 2 * v.radius) {\n                console.log(\"collision with vertice \" + v.number, isVerticeClicked);\n                verticeNum = v.number;\n                drawMenu(x, y);\n            }\n        });\n\n    }\n});\n\n\ndocument.addEventListener(\"contextmenu\", e => {\n    e.preventDefault();\n})\n\nfunction drawMenu(x, y) {\n    menu.style.top = y + \"px\";\n    menu.style.left = x + \"px\";\n    menu.style.visibility = \"visible\";\n    menu.style.opacity = \"1\";\n}\n\ncan.addEventListener('mouseup', e => {\n    if (e.button == 2) return;\n    if (isVerticeClicked == 0 && !flag_) {\n        let connected_v = [];\n        let { x, y } = getClickedCoords();\n        let v = { x, y, radius, number, connected_v };\n        vertices.push(v);\n        number++;\n    } else {\n        console.log(\"popali v vertice\");\n        if (isVerticeClicked == 0 && flag_) {\n            first_vert = vertices[verticeNum - 1];\n            isVerticeClicked++;\n            console.log(first_vert.number, verticeNum, \" clicked = \" + isVerticeClicked);\n        }\n        else {\n            if (isVerticeClicked == 3) isVerticeClicked++;\n            else {\n                if (isVerticeClicked == 1 && flag_) {\n\n                    console.log(first_vert.number, verticeNum, \"provodim liniuy \");\n                    isVerticeClicked = 0;\n                    let second_vert = vertices[verticeNum - 1];\n                    let flag_con = false;\n                    first_vert.connected_v.forEach((u1) => {\n                        if (u1.number == second_vert.number)\n                            flag_con = true;\n                    });\n                    if (second_vert.number != first_vert.number && !flag_con) {\n                        vertices[verticeNum - 1].connected_v.push(first_vert);\n                        //console.log(vertices[verticeNum - 1].connected_v[0].number + \" p a p a\");\n                        vertices[first_vert.number - 1].connected_v.push(second_vert);\n                    }\n                    first_vert = -1;\n                    draw();\n                }\n\n            }\n        }\n    }\n    flag_ = 0;\n    console.log(\"end mouse up = \" + isVerticeClicked);\n    draw();\n    // если изначально 0\n    // если было состояние 0, mousedown\n    // если после этого происходит mousemove - 3\n    // если после mousedown -> mouseup - состояние 1\n    // иначе состояние ++;\n});\n\ncan.addEventListener('mousemove', e => {\n    if (e.button == 2) return;\n    console.log(\"moving  = \" + isVerticeClicked);\n    if (isVerticeClicked == 0 && flag_) isVerticeClicked = 3;\n    else if (isVerticeClicked == 3) {\n        let rect = can.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        vertices[verticeNum - 1].x = x;\n        vertices[verticeNum - 1].y = y;\n        draw();\n    }\n    if (isVerticeClicked == 4) isVerticeClicked = 0;\n    if (isVerticeClicked == 1) {\n        let v = first_vert;\n        let rect = can.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        let u = { x, y };\n        draw();\n        ctx.beginPath();\n        let rast = (Math.sqrt((v.x - u.x) * (v.x - u.x) + (v.y - u.y) * (v.y - u.y)));\n        let cos_i = (v.x - u.x) / rast;\n        let sin_i = Math.sqrt(1 - cos_i * cos_i);\n        let s_y = radius * sin_i;\n        let s_x = radius * cos_i;\n        if (u.y > v.y) {\n            ctx.moveTo(v.x - s_x, v.y + s_y);\n            ctx.lineTo(u.x, u.y);\n        } else {\n            ctx.moveTo(v.x - s_x, v.y - s_y);\n            ctx.lineTo(u.x, u.y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n\n    }\n\n})\n\nfunction main() {\n    draw();\n}\n\nmain();"],"sourceRoot":""}