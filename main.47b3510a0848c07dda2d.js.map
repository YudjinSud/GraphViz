{"version":3,"sources":["webpack:///./index.js"],"names":["can","document","getElementById","ctx","getContext","menu","number","flag_","used","first_vert","vertices","isVerticeClicked","verticeNum","width","body","clientWidth","height","clientHeight","dfs_start_btn","bfs_start_btn","dijkstra_start_btn","draw","beginPath","clearRect","forEach","v","strokeStyle","arc","x","y","Math","PI","fillText","stroke","drawVertex","connected_v","u","console","log","rast","sqrt","cos_i","sin_i","s_y","s_x","moveTo","lineTo","closePath","drawLine","clear_used_status","i","sleep","ms","Promise","resolve","setTimeout","dfs","length","getClickedCoords","rect","getBoundingClientRect","event","clientX","left","clientY","top","addEventListener","style","opacity","alert","this","id","button","visibility","abs","radius","drawMenu","e","preventDefault","second_vert","flag_con","u1","push"],"mappings":"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","file":"main.47b3510a0848c07dda2d.js","sourcesContent":["import './styles.css';\nimport { hi } from \"./GraphLib\"\n\nvar can = document.getElementById(\"c\");\nvar ctx = can.getContext('2d');\nvar menu = document.getElementById(\"menu\");\nvar number = 1;\nconst radius = 15;\n\nvar delay;\nvar flag_ = 0;\nvar longpress = 1300;\nvar used = [];\nused[10000] = 0;\nvar vertices = [];\nvar isVerticeClicked = 0;\nvar first_vert;\nvar verticeNum = 0;\nvar stateMachine = [];\nfirst_vert = -1;\ncan.width = document.body.clientWidth;\ncan.height = document.body.clientHeight;\n\nvar dfs_start_btn = document.getElementById(\"start_dfs\");\nvar bfs_start_btn = document.getElementById(\"start_bfs\");\nvar dijkstra_start_btn = document.getElementById(\"start_dijkstra\");\n\ndfs_start_btn.addEventListener(\"click\", function () {\n    if (menu.style.opacity == \"1\")\n        start_dfs(vertices[verticeNum - 1]);\n});\n\n\nbfs_start_btn.addEventListener(\"click\", function () {\n    if (menu.style.opacity == \"1\")\n        alert(this.id);\n});\n\n\ndijkstra_start_btn.addEventListener(\"click\", function () {\n    if (menu.style.opacity == \"1\")\n        alert(this.id);\n});\n\nfunction draw() {\n    ctx.beginPath();\n    ctx.clearRect(0, 0, can.width, can.height);\n    vertices.forEach((v) => { drawVertex(v) });\n    vertices.forEach((v) => {\n        v.connected_v.forEach((u) => {\n            console.log(v.number, \"->\", u.number);\n            drawLine(v, u);\n        });\n    });\n}\n\nfunction clear_used_status() {\n    for (let i = 0; i < number; i++)\n        used[i] = 0;\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction start_dfs(v) {\n    clear_used_status();\n    console.log(\"starting dfs\");\n    dfs(v);\n}\n\nasync function dfs(v) {\n    used[v.number - 1] = 1;\n    draw();\n    await sleep(1000);\n    for(let i = 0; i < v.connected_v.length;i++){\n        let u = v.connected_v[i];\n        if (used[u.number - 1] != 1){\n            dfs(u);\n        }\n        draw();\n    }\n}\n\n\nfunction drawVertex(v) {\n    ctx.beginPath();\n    if (used[v.number - 1] == 1)\n        ctx.strokeStyle = 'red';\n    else\n        ctx.strokeStyle = 'black';\n    ctx.arc(v.x, v.y, radius, 0, 2 * Math.PI);\n    ctx.fillText(v.number, v.x - 3, v.y + 4, 10);\n    ctx.stroke();\n}\n\nfunction drawLine(v, u) {\n    ctx.beginPath();\n    // if (used[u.number - 1] == 1 && used[v.number - 1] == 1)\n    //     ctx.strokeStyle = 'red';\n    // else\n    //     ctx.strokeStyle = 'black';\n    ctx.strokeStyle = 'green';\n    let rast = (Math.sqrt((v.x - u.x) * (v.x - u.x) + (v.y - u.y) * (v.y - u.y)));\n    let cos_i = (v.x - u.x) / rast;\n    let sin_i = Math.sqrt(1 - cos_i * cos_i);\n    let s_y = radius * sin_i;\n    let s_x = radius * cos_i;\n    if (u.y > v.y) {\n        ctx.moveTo(v.x - s_x, v.y + s_y);\n        ctx.lineTo(u.x + s_x, u.y - s_y);\n    } else {\n        ctx.moveTo(v.x - s_x, v.y - s_y);\n        ctx.lineTo(u.x + s_x, u.y + s_y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    //ctx.strokeStyle = 'black';\n}\n\nfunction getClickedCoords() {\n    let rect = can.getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n    return { x, y };\n}\n\ncan.addEventListener('mousedown', event => {\n    let { x, y } = getClickedCoords();\n\n    if (event.button == 0) {\n        clear_used_status();\n        menu.style.visibility = \"hidden\"; // скрыли прошлое меню;\n        console.log(\"leftClick\");\n        vertices.forEach((v) => {\n            if (Math.abs(v.x - x) <= 2 * v.radius && Math.abs(v.y - y) <= 2 * v.radius) {\n                flag_ = 1;\n                console.log(\"collision with vertice \" + v.number, isVerticeClicked);\n                verticeNum = v.number;\n            }\n        });\n        draw();\n    }\n    else if (event.button == 2) {\n        console.log(\"rightClick\");\n        vertices.forEach((v) => {\n            if (Math.abs(v.x - x) <= 2 * v.radius && Math.abs(v.y - y) <= 2 * v.radius) {\n                console.log(\"collision with vertice \" + v.number, isVerticeClicked);\n                verticeNum = v.number;\n                drawMenu(x, y);\n            }\n        });\n\n    }\n});\n\n\ndocument.addEventListener(\"contextmenu\", e => {\n    e.preventDefault();\n})\n\nfunction drawMenu(x, y) {\n    menu.style.top = y + \"px\";\n    menu.style.left = x + \"px\";\n    menu.style.visibility = \"visible\";\n    menu.style.opacity = \"1\";\n}\n\ncan.addEventListener('mouseup', e => {\n    if (e.button == 2) return;\n    if (isVerticeClicked == 0 && !flag_) {\n        let connected_v = [];\n        let { x, y } = getClickedCoords();\n        let v = { x, y, radius, number, connected_v };\n        vertices.push(v);\n        number++;\n    } else {\n        console.log(\"popali v vertice\");\n        if (isVerticeClicked == 0 && flag_) {\n            first_vert = vertices[verticeNum - 1];\n            isVerticeClicked++;\n            console.log(first_vert.number, verticeNum, \" clicked = \" + isVerticeClicked);\n        }\n        else {\n            if (isVerticeClicked == 3) isVerticeClicked++;\n            else {\n                if (isVerticeClicked == 1 && flag_) {\n\n                    console.log(first_vert.number, verticeNum, \"provodim liniuy \");\n                    isVerticeClicked = 0;\n                    let second_vert = vertices[verticeNum - 1];\n                    let flag_con = false;\n                    first_vert.connected_v.forEach((u1) => {\n                        if (u1.number == second_vert.number)\n                            flag_con = true;\n                    });\n                    if (second_vert.number != first_vert.number && !flag_con) {\n                        vertices[verticeNum - 1].connected_v.push(first_vert);\n                        //console.log(vertices[verticeNum - 1].connected_v[0].number + \" p a p a\");\n                        vertices[first_vert.number - 1].connected_v.push(second_vert);\n                    }\n                    first_vert = -1;\n                    draw();\n                }\n\n            }\n        }\n    }\n    flag_ = 0;\n    console.log(\"end mouse up = \" + isVerticeClicked);\n    draw();\n    // если изначально 0\n    // если было состояние 0, mousedown\n    // если после этого происходит mousemove - 3\n    // если после mousedown -> mouseup - состояние 1\n    // иначе состояние ++;\n});\n\ncan.addEventListener('mousemove', e => {\n    if (e.button == 2) return;\n    console.log(\"moving  = \" + isVerticeClicked);\n    if (isVerticeClicked == 0 && flag_) isVerticeClicked = 3;\n    else if (isVerticeClicked == 3) {\n        let rect = can.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        vertices[verticeNum - 1].x = x;\n        vertices[verticeNum - 1].y = y;\n        draw();\n    }\n    if (isVerticeClicked == 4) isVerticeClicked = 0;\n    if (isVerticeClicked == 1) {\n        let v = first_vert;\n        let rect = can.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        let u = { x, y };\n        draw();\n        ctx.beginPath();\n        let rast = (Math.sqrt((v.x - u.x) * (v.x - u.x) + (v.y - u.y) * (v.y - u.y)));\n        let cos_i = (v.x - u.x) / rast;\n        let sin_i = Math.sqrt(1 - cos_i * cos_i);\n        let s_y = radius * sin_i;\n        let s_x = radius * cos_i;\n        if (u.y > v.y) {\n            ctx.moveTo(v.x - s_x, v.y + s_y);\n            ctx.lineTo(u.x, u.y);\n        } else {\n            ctx.moveTo(v.x - s_x, v.y - s_y);\n            ctx.lineTo(u.x, u.y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n\n    }\n\n})\n\nfunction main() {\n    draw();\n}\n\nmain();"],"sourceRoot":""}